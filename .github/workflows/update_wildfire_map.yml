name: Update R Wildfire Map

on:
  schedule:
    - cron: '15 * * * *'  # Runs at 15 minutes past every hour
  workflow_dispatch:  # Allows manual trigger

jobs:
  run-script:
    runs-on: macos-latest

    steps:
    # Step 1: Checkout the repository
    # This step checks out the repository so that the workflow can access the files.
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Unlink conflicting pkg-config
    # This step unlinks the conflicting pkg-config package to avoid conflicts with pkgconf.
    - name: Unlink conflicting pkg-config
      run: |
        brew unlink pkg-config@0.29.2

    # Step 3: Install system dependencies
    # This step installs necessary system libraries and tools using Homebrew.
    - name: Install system dependencies
      run: |
        brew install gdal  # Geospatial Data Abstraction Library
        brew install udunits  # Units of Measurement Library
        brew install pandoc  # Document conversion tool

    # Step 4: Set up R
    # This step sets up R on the runner using the r-lib/actions/setup-r action.
    - name: Set up R
      uses: r-lib/actions/setup-r@v2

    # Step 5: Install R packages
    # This step installs the necessary R packages required by the script.
    - name: Install R packages
      run: |
        Rscript -e 'install.packages(c("dplyr", "readr", "stringr", "leaflet", "leaflet.extras", "leaflet.providers", "sf", "htmlwidgets", "htmltools", "janitor", "lubridate"))'

    # Step 6: Run R script
    # This step runs the R script located in the scripts directory.
    - name: Run R script
      run: |
        Rscript scripts/wildfires_scrape_build.R  # Adjusted path to the script

    # Step 7: Commit and push changes
    # This step configures Git, adds changes, commits them, and pushes to the repository using the GitHub Actions bot credentials.
    - name: Commit and push changes
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add .
        git commit -m 'Update data and map'
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}